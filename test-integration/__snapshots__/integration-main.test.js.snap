// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integration-main empty queue - nothing to do 1`] = `
{
  "BEGIN": 4,
  "COMMIT": 3,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 2,
}
`;

exports[`integration-main if checkEventAndGeneratePayload methods throws an error --> entry should not be processed + status should be error 1`] = `
[
  [
    "Caught error during event processing - setting queue entry to error. Please catch your promises/exceptions",
    [Error: error during processing],
    {
      "eventSubType": "Task",
      "eventType": "Notifications",
      "queueEntriesIds": [
        "dbaa22d5-41db-4ff3-bdd8-e0bb19b217cf",
      ],
    },
  ],
]
`;

exports[`integration-main if checkEventAndGeneratePayload methods throws an error --> entry should not be processed + status should be error 2`] = `
{
  "BEGIN": 5,
  "COMMIT": 4,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 2,
  "UPDATE": 2,
}
`;

exports[`integration-main if cluster methods throws an error --> entry should not be processed + status should be error 2`] = `
[
  [
    "Error during clustering of events - setting all queue entries to error.",
    [Error: error during processing],
    {
      "eventSubType": "Task",
      "eventType": "Notifications",
    },
  ],
]
`;

exports[`integration-main if cluster methods throws an error --> entry should not be processed + status should be error 3`] = `
{
  "BEGIN": 6,
  "COMMIT": 4,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 3,
  "ROLLBACK": 1,
  "UPDATE": 2,
}
`;

exports[`integration-main if modifyQueueEntry methods throws an error --> entry should not be processed + status should be error 1`] = `
[
  [
    "Caught error during event processing - setting queue entry to error. Please catch your promises/exceptions",
    [Error: error during processing],
    {
      "eventSubType": "Task",
      "eventType": "Notifications",
      "queueEntriesIds": [
        "dbaa22d5-41db-4ff3-bdd8-e0bb19b217cf",
      ],
    },
  ],
]
`;

exports[`integration-main if modifyQueueEntry methods throws an error --> entry should not be processed + status should be error 2`] = `
{
  "BEGIN": 5,
  "COMMIT": 4,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 2,
  "UPDATE": 2,
}
`;

exports[`integration-main if process event returns an error --> tx should be rolled backed 1`] = `
{
  "BEGIN": 7,
  "COMMIT": 4,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 4,
  "ROLLBACK": 2,
  "UPDATE": 2,
}
`;

exports[`integration-main if process event throws an error --> tx should be rolled backed 2`] = `
{
  "BEGIN": 7,
  "COMMIT": 4,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 4,
  "ROLLBACK": 2,
  "UPDATE": 2,
}
`;

exports[`integration-main if processing time is exceeded broadcast should trigger processing again 1`] = `
{
  "BEGIN": 7,
  "COMMIT": 4,
  "CREATE": 2,
  "DELETE": 1,
  "READ": 3,
  "ROLLBACK": 2,
  "UPDATE": 2,
}
`;

exports[`integration-main insert one delayed entry and process - should not be processed 1`] = `
{
  "BEGIN": 4,
  "COMMIT": 3,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 2,
}
`;

exports[`integration-main insert one entry and process 1`] = `
{
  "BEGIN": 7,
  "COMMIT": 4,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 4,
  "ROLLBACK": 2,
  "UPDATE": 2,
}
`;

exports[`integration-main insert one entry witch checkForNext but return status 0 1`] = `
{
  "BEGIN": 7,
  "COMMIT": 5,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 4,
  "ROLLBACK": 1,
  "UPDATE": 2,
}
`;

exports[`integration-main register retry for failed event after configured interval 1`] = `
{
  "BEGIN": 7,
  "COMMIT": 5,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 4,
  "ROLLBACK": 1,
  "UPDATE": 2,
}
`;

exports[`integration-main register retry for failed event after default interval 1`] = `
{
  "BEGIN": 6,
  "COMMIT": 4,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 3,
  "ROLLBACK": 1,
  "UPDATE": 2,
}
`;

exports[`integration-main returning exceeded status should be allowed 1`] = `
{
  "BEGIN": 6,
  "COMMIT": 4,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 3,
  "ROLLBACK": 1,
  "UPDATE": 2,
}
`;

exports[`integration-main returning exceeded status should be allowed 2`] = `
{
  "BEGIN": 3,
  "COMMIT": 3,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 2,
}
`;

exports[`integration-main should do nothing if lock for event combination cannot be acquired 1`] = `
{
  "BEGIN": 2,
  "COMMIT": 1,
  "CREATE": 1,
  "READ": 2,
}
`;

exports[`integration-main should set db user correctly 1`] = `
{
  "BEGIN": 7,
  "COMMIT": 5,
  "CREATE": 2,
  "DELETE": 1,
  "READ": 4,
  "ROLLBACK": 1,
  "UPDATE": 2,
}
`;

exports[`integration-main two entries with no commit on event level 1`] = `
{
  "BEGIN": 7,
  "COMMIT": 4,
  "CREATE": 1,
  "DELETE": 1,
  "READ": 6,
  "ROLLBACK": 2,
  "UPDATE": 2,
}
`;
